name: Test Suite

on:
  push:
    branches: [main, preview-development]
  pull_request:
    branches: [main, preview-development]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        timeout-minutes: 2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
        timeout-minutes: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.0
        timeout-minutes: 2

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        timeout-minutes: 1

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
        timeout-minutes: 3

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        timeout-minutes: 5
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Generate Prisma Client
        run: pnpm prisma generate
        timeout-minutes: 2
        env:
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"

      - name: Type check
        run: pnpm run typecheck
        continue-on-error: true
        timeout-minutes: 3
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
          DIRECT_URL: "postgresql://test:test@localhost:5432/test"
          NEXT_PUBLIC_SUPABASE_URL: "https://placeholder.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "placeholder-key"
          NEXTAUTH_SECRET: "test-secret"
          SUPABASE_SERVICE_ROLE_KEY: "test-service-role-key"
          STRIPE_SECRET_KEY: "sk_test_placeholder"
          SENDGRID_API_KEY: "SG.placeholder"
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_placeholder"
          RESEND_API_KEY: "re_placeholder"
          # Add missing Sanity environment variables
          NEXT_PUBLIC_SANITY_PROJECT_ID: "test-project-id"
          NEXT_PUBLIC_SANITY_DATASET: "test-dataset"
          SANITY_API_TOKEN: "test-sanity-token"

      - name: Lint check
        run: pnpm run lint
        continue-on-error: true
        timeout-minutes: 2
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Run unit tests
        run: pnpm run test:ci --verbose
        timeout-minutes: 15
        env:
          CI: true
          NODE_OPTIONS: "--max-old-space-size=4096"
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
          DIRECT_URL: "postgresql://test:test@localhost:5432/test"
          NEXT_PUBLIC_SUPABASE_URL: "https://placeholder.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "placeholder-key"
          NEXTAUTH_SECRET: "test-secret"
          SUPABASE_SERVICE_ROLE_KEY: "test-service-role-key"
          STRIPE_SECRET_KEY: "sk_test_placeholder"
          SENDGRID_API_KEY: "SG.placeholder"
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_placeholder"
          RESEND_API_KEY: "re_placeholder"
          # Add missing Sanity environment variables
          NEXT_PUBLIC_SANITY_PROJECT_ID: "test-project-id"
          NEXT_PUBLIC_SANITY_DATASET: "test-dataset"
          SANITY_API_TOKEN: "test-sanity-token"

      - name: Run unit tests with coverage
        run: pnpm run test:coverage --verbose --maxWorkers=2
        timeout-minutes: 15
        env:
          CI: true
          NODE_OPTIONS: "--max-old-space-size=4096"
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
          DIRECT_URL: "postgresql://test:test@localhost:5432/test"
          NEXT_PUBLIC_SUPABASE_URL: "https://placeholder.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "placeholder-key"
          NEXTAUTH_SECRET: "test-secret"
          SUPABASE_SERVICE_ROLE_KEY: "test-service-role-key"
          STRIPE_SECRET_KEY: "sk_test_placeholder"
          SENDGRID_API_KEY: "SG.placeholder"
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_placeholder"
          RESEND_API_KEY: "re_placeholder"
          # Add missing Sanity environment variables
          NEXT_PUBLIC_SANITY_PROJECT_ID: "test-project-id"
          NEXT_PUBLIC_SANITY_DATASET: "test-dataset"
          SANITY_API_TOKEN: "test-sanity-token"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-node-${{ matrix.node-version }}
          path: |
            coverage/
            test-results/
          retention-days: 30

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: false

  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: always()
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        timeout-minutes: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
        timeout-minutes: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.0
        timeout-minutes: 2

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        timeout-minutes: 5
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        timeout-minutes: 8

      - name: Build application
        run: pnpm run build:no-typecheck
        timeout-minutes: 15
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          NEXT_TELEMETRY_DISABLED: 1
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
          DIRECT_URL: "postgresql://test:test@localhost:5432/test"
          NEXT_PUBLIC_SUPABASE_URL: "https://placeholder.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "placeholder-key"
          NEXTAUTH_SECRET: "test-secret"
          SUPABASE_SERVICE_ROLE_KEY: "test-service-role-key"
          STRIPE_SECRET_KEY: "sk_test_placeholder"
          SENDGRID_API_KEY: "SG.placeholder"
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_placeholder"
          RESEND_API_KEY: "re_placeholder"
          # Add missing Sanity environment variables
          NEXT_PUBLIC_SANITY_PROJECT_ID: "test-project-id"
          NEXT_PUBLIC_SANITY_DATASET: "test-dataset"
          SANITY_API_TOKEN: "test-sanity-token"

      - name: Run E2E tests
        run: pnpm run test:e2e
        timeout-minutes: 15
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
          DIRECT_URL: "postgresql://test:test@localhost:5432/test"
          NEXT_PUBLIC_SUPABASE_URL: "https://placeholder.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "placeholder-key"
          NEXTAUTH_SECRET: "test-secret"
          SUPABASE_SERVICE_ROLE_KEY: "test-service-role-key"
          STRIPE_SECRET_KEY: "sk_test_placeholder"
          SENDGRID_API_KEY: "SG.placeholder"
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_placeholder"
          RESEND_API_KEY: "re_placeholder"
          # Add missing Sanity environment variables
          NEXT_PUBLIC_SANITY_PROJECT_ID: "test-project-id"
          NEXT_PUBLIC_SANITY_DATASET: "test-dataset"
          SANITY_API_TOKEN: "test-sanity-token"

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: always()
    needs: test

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        timeout-minutes: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
        timeout-minutes: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.0
        timeout-minutes: 2

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        timeout-minutes: 5
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
        timeout-minutes: 2

      - name: Setup test database
        run: |
          npm install -g prisma
          SKIP_ENV_VALIDATION=true DATABASE_URL="postgresql://postgres:postgres@localhost:5432/test_db" DIRECT_URL="postgresql://postgres:postgres@localhost:5432/test_db" npx prisma db push --skip-generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/test_db
        timeout-minutes: 3

      - name: Run integration tests
        run: pnpm run test:integration:ci --verbose
        timeout-minutes: 10
        env:
          CI: true
          NODE_OPTIONS: "--max-old-space-size=4096"
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/test_db
          NEXT_PUBLIC_SUPABASE_URL: "https://placeholder.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "placeholder-key"
          NEXTAUTH_SECRET: "test-secret"
          NODE_ENV: test
          SUPABASE_SERVICE_ROLE_KEY: "test-service-role-key"
          STRIPE_SECRET_KEY: "sk_test_placeholder"
          SENDGRID_API_KEY: "SG.placeholder"
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_placeholder"
          RESEND_API_KEY: "re_placeholder"
          # Add missing Sanity environment variables
          NEXT_PUBLIC_SANITY_PROJECT_ID: "test-project-id"
          NEXT_PUBLIC_SANITY_DATASET: "test-dataset"
          SANITY_API_TOKEN: "test-sanity-token"

      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: |
            coverage/
            test-results/
          retention-days: 30
