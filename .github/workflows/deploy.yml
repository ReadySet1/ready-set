name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual deployment

env:
  NODE_VERSION: '20'

jobs:
  # Run CI checks first
  ci-checks:
    name: Run CI Checks
    uses: ./.github/workflows/ci.yml

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: ci-checks
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://ready-set-nextjs.vercel.app

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Deploy to Vercel
        run: |
          echo "üöÄ Deploying to production..."
          echo "All tests passed - deployment proceeding"
          # Vercel will handle the actual deployment via their Git integration
          # This step is here to show the deployment gate concept

      - name: Post-deployment verification
        run: |
          echo "‚úÖ Deployment completed"
          echo "üîç Running post-deployment checks..."
          # Add any post-deployment verification here

  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: ci-checks
    if: github.ref == 'refs/heads/development'
    environment:
      name: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Deploy to Development
        run: |
          echo "üöÄ Deploying to development environment..."
          echo "All tests passed - deployment proceeding"
