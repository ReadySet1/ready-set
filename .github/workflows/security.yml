name: Security

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]
  schedule:
    # Run weekly security scans (Mondays at 9 AM UTC)
    - cron: '0 9 * * 1'

jobs:
  # CodeQL Analysis is now handled by GitHub's default setup
  # This custom job has been disabled to avoid conflicts
  # To re-enable: disable default CodeQL in Settings > Code security and analysis
  # codeql-analysis:
  #   name: CodeQL Security Analysis
  #   runs-on: ubuntu-latest
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v5
  #
  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v3
  #       with:
  #         languages: javascript-typescript
  #         # Add additional queries for more thorough scanning
  #         queries: +security-and-quality
  #
  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v3
  #
  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v3

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          # Allow these licenses (common permissive licenses in JavaScript ecosystem)
          # Note: LGPL licenses included for sharp image processing library
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, MPL-2.0, CC-BY-4.0, CC0-1.0, 0BSD, MITNFA, LGPL-2.0-only, LGPL-2.1-only, LGPL-3.0-only, LGPL-3.0-or-later

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        run: pnpm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for critical vulnerabilities
        run: |
          CRITICAL=$(pnpm audit --json | jq '.metadata.vulnerabilities.critical // 0')
          HIGH=$(pnpm audit --json | jq '.metadata.vulnerabilities.high // 0')

          echo "Critical vulnerabilities: $CRITICAL"
          echo "High vulnerabilities: $HIGH"

          if [ "$CRITICAL" -gt 0 ]; then
            echo "❌ Critical vulnerabilities found!"
            exit 1
          fi

          if [ "$HIGH" -gt 3 ]; then
            echo "⚠️  Too many high vulnerabilities found!"
            exit 1
          fi

          echo "✅ Security audit passed"
