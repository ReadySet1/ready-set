name: Security

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]
  schedule:
    # Run weekly security scans (Mondays at 9 AM UTC)
    - cron: '0 9 * * 1'

jobs:
  # CodeQL Analysis is now handled by GitHub's default setup
  # This custom job has been disabled to avoid conflicts
  # To re-enable: disable default CodeQL in Settings > Code security and analysis
  # codeql-analysis:
  #   name: CodeQL Security Analysis
  #   runs-on: ubuntu-latest
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v5
  #
  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v3
  #       with:
  #         languages: javascript-typescript
  #         # Add additional queries for more thorough scanning
  #         queries: +security-and-quality
  #
  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v3
  #
  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v3

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          # Allow these licenses (common permissive licenses in JavaScript ecosystem)
          # Note: LGPL licenses included for sharp image processing library
          # Note: JSON license included for victory-vendor package
          # Note: CC0-1.0 included for vite and other build tools
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, MPL-2.0, CC-BY-4.0, CC0-1.0, 0BSD, MITNFA, LGPL-2.0-only, LGPL-2.1-only, LGPL-3.0-only, LGPL-3.0-or-later, JSON

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        run: pnpm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for critical vulnerabilities
        run: |
          CRITICAL=$(pnpm audit --json | jq '.metadata.vulnerabilities.critical // 0')
          HIGH=$(pnpm audit --json | jq '.metadata.vulnerabilities.high // 0')

          echo "Critical vulnerabilities: $CRITICAL"
          echo "High vulnerabilities: $HIGH"

          if [ "$CRITICAL" -gt 0 ]; then
            echo "❌ Critical vulnerabilities found!"
            exit 1
          fi

          if [ "$HIGH" -gt 3 ]; then
            echo "⚠️  Too many high vulnerabilities found!"
            exit 1
          fi

          echo "✅ Security audit passed"

  e2e-auth-security:
    name: E2E Authentication Security Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Verify .auth directory is in .gitignore
        run: |
          echo "🔍 Checking if e2e/.auth/ is in .gitignore..."

          if grep -q "^/e2e/\.auth/" .gitignore; then
            echo "✅ .auth directory is properly ignored in .gitignore"
          else
            echo "❌ ERROR: e2e/.auth/ is not in .gitignore!"
            echo "This is a critical security issue - auth files contain session tokens."
            echo "Add '/e2e/.auth/' to .gitignore immediately."
            exit 1
          fi

      - name: Verify CI workflows don't cache .auth files
        run: |
          echo "🔍 Checking CI workflows for .auth caching..."

          # Search for cache actions that might include .auth
          if grep -r "cache.*\.auth" .github/workflows/ 2>/dev/null; then
            echo "❌ ERROR: Found .auth references in cache configuration!"
            echo "CI workflows must NOT cache authentication files."
            exit 1
          else
            echo "✅ No .auth caching found in CI workflows"
          fi

      - name: Verify CI artifacts exclude .auth files
        run: |
          echo "🔍 Checking artifact uploads for .auth exclusion..."

          # Check if ci.yml exists
          if [ ! -f ".github/workflows/ci.yml" ]; then
            echo "⚠️  Warning: ci.yml not found, skipping artifact check"
            exit 0
          fi

          # Check if any artifact uploads are configured
          if ! grep -q "upload-artifact" .github/workflows/ci.yml; then
            echo "⚠️  Warning: No artifact uploads found in ci.yml"
            exit 0
          fi

          # Get all artifact upload configurations
          # Using grep to find upload-artifact sections and extract path values
          ARTIFACT_PATHS=$(grep -A 5 "upload-artifact" .github/workflows/ci.yml | grep "path:" | awk '{print $2}')

          if [ -z "$ARTIFACT_PATHS" ]; then
            echo "⚠️  Warning: Could not extract artifact paths from ci.yml"
            echo "This may indicate a change in the CI file structure."
            exit 0
          fi

          echo "Artifact paths configured:"
          echo "$ARTIFACT_PATHS"

          # Check if any artifact path includes .auth
          if echo "$ARTIFACT_PATHS" | grep -q "\.auth"; then
            echo "❌ ERROR: Artifacts include .auth files!"
            echo "Auth files must NOT be uploaded as CI artifacts."
            exit 1
          fi

          # Verify expected safe artifacts are present
          if echo "$ARTIFACT_PATHS" | grep -q "playwright-report"; then
            echo "✅ Artifact configuration verified - .auth files are excluded"
          else
            echo "⚠️  Warning: Could not verify expected artifact patterns"
            echo "Expected to find 'playwright-report' in artifact paths"
          fi

      - name: Verify e2e/README.md has security warnings
        run: |
          echo "🔍 Checking e2e/README.md for security documentation..."

          if ! [ -f "e2e/README.md" ]; then
            echo "❌ ERROR: e2e/README.md not found!"
            exit 1
          fi

          # Check for security section
          if ! grep -q "## Security" e2e/README.md; then
            echo "❌ ERROR: e2e/README.md missing Security section!"
            echo "Authentication files need proper security documentation."
            exit 1
          fi

          # Check for .auth mentions
          if ! grep -q "\.auth" e2e/README.md; then
            echo "❌ ERROR: e2e/README.md missing .auth documentation!"
            exit 1
          fi

          # Check for security warnings
          if ! grep -qi "never commit" e2e/README.md || ! grep -qi "session token" e2e/README.md; then
            echo "❌ ERROR: e2e/README.md missing critical security warnings!"
            exit 1
          fi

          echo "✅ e2e/README.md has proper security documentation"

      - name: Security check summary
        if: success()
        run: |
          echo ""
          echo "╔═══════════════════════════════════════════════════════╗"
          echo "║   ✅ E2E Authentication Security Checks PASSED        ║"
          echo "╚═══════════════════════════════════════════════════════╝"
          echo ""
          echo "✓ .auth directory is properly gitignored"
          echo "✓ CI workflows don't cache auth files"
          echo "✓ CI artifacts exclude auth files"
          echo "✓ Security documentation is in place"
          echo ""
          echo "📖 For more information, see e2e/README.md Security section"
