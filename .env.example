# Supabase Configuration
# ======================
# Get these from your Supabase project dashboard

# Public URL for your Supabase project (safe to expose to client)
NEXT_PUBLIC_SUPABASE_URL=https://your-project-ref.supabase.co

# Anonymous/public API key (safe to expose to client)
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key

# Service role key (NEVER expose to client, server-side only)
SUPABASE_SERVICE_ROLE_KEY=your_service_role_key

# Direct database connection (for migrations, admin tasks)
DATABASE_URL=postgresql://postgres:[YOUR-PASSWORD]@db.your-project-ref.supabase.co:5432/postgres

# Google OAuth Configuration (Optional)
# ====================================
# Required if using Google Sign-In
# Get these from Google Cloud Console

GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret

# Google reCAPTCHA v3 Configuration (Optional)
# ============================================
# Required for contact form spam protection
# Get these from https://www.google.com/recaptcha/admin

# Public site key (safe to expose to client)
NEXT_PUBLIC_RECAPTCHA_SITE_KEY=your_recaptcha_site_key

# Secret key (NEVER expose to client, server-side only)
RECAPTCHA_SECRET_KEY=your_recaptcha_secret_key

# Minimum reCAPTCHA score threshold (0.0 to 1.0, default: 0.5)
# 0.0 = Very likely a bot
# 0.5 = Neutral (Google's recommendation)
# 1.0 = Very likely a human
# Adjust based on your spam patterns and false positive rate
RECAPTCHA_MIN_SCORE=0.5

# Spam Protection Configuration
# ==============================
# Trust proxy headers (x-forwarded-for, x-real-ip) for IP extraction
# Set to 'false' if not behind a trusted proxy (Vercel, Cloudflare, etc.)
# Default: true (assumes production deployment behind trusted proxy)
# IMPORTANT: Set to 'false' in local development or untrusted environments
TRUST_PROXY=true

# OpenAI Configuration (Optional)
# ===============================
# Required for AI features

OPENAI_API_KEY=your_openai_api_key

# Vercel Cron Configuration (Production Only)
# ===========================================
# Required for securing cron endpoints in production
# This secret is used to authenticate Vercel Cron job requests

# Generate a secure random secret using one of these methods:
# - Node.js: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
# - OpenSSL: openssl rand -base64 32
# - Online: https://generate-secret.vercel.app/32
CRON_SECRET=your_cron_secret_here

# How to configure in Vercel:
# 1. Generate a secure random secret (see commands above)
# 2. Add to Vercel project: Settings > Environment Variables
# 3. Set variable name: CRON_SECRET
# 4. Set value: your generated secret
# 5. Select environments: Production (and Preview if needed)
# 6. Save changes
#
# Note: This is automatically used by Vercel Cron jobs configured in vercel.json
# See: /api/admin/quarantine-cleanup for cron endpoint implementation

# Development Environment Variables
# =================================
# These are typically used in development

# Next.js Environment
NODE_ENV=development

# Additional configuration
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Testing Configuration
# =====================
# These are used by Jest for testing

TEST_DATABASE_URL=postgresql://test:test@localhost:5432/test_db
NEXT_PUBLIC_TEST_SUPABASE_URL=https://test.supabase.co
NEXT_PUBLIC_TEST_SUPABASE_ANON_KEY=test-anon-key
TEST_SUPABASE_SERVICE_ROLE_KEY=test-service-role-key

# Instructions:
# =============
# 1. Copy this file to .env.local for development
# 2. Replace all placeholder values with your actual credentials
# 3. Never commit .env.local to version control
# 4. For production, set these variables in your hosting platform

# Development Project Credentials (rs-dev)
# ==========================================
# Ready to use for development branch:
# NEXT_PUBLIC_SUPABASE_URL=https://khvteminrbghoeuqajzm.supabase.co
# NEXT_PUBLIC_SUPABASE_ANON_KEY=[Get from Supabase dashboard]
# SUPABASE_SERVICE_ROLE_KEY=[Get from Supabase dashboard]
